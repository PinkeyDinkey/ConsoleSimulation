import random
import os
import signal
import threading
from mysql.connector import connect, Error


class DBwork():
    def __init__(self, host="localhost", user="root", password="d090595d", database="sovkombank_bot",id=None, text = ""):
        self.host = host
        self.user = user
        self.password = password
        self.database = database
        self.id = id
        self.text = text

    @property
    def getID(self):
        return self.id

    def DB_deco_start_session(func):
        def wrapper(self):
            try:
                with connect(
                        host=self.host,
                        user=self.user,
                        password=self.password,
                        database = self.database
                ) as connection:
                    res = func(self)
                    with connection.cursor() as cursor:
                        cursor.execute(res)
                        connection.commit()
                        self.id = cursor.lastrowid
                    return res
            except Error as e:
                print(e)
        return wrapper

    def DB_message(func):
        def wrapper(self,text):
            try:
                with connect(
                        host=self.host,
                        user=self.user,
                        password=self.password,
                        database = self.database
                ) as connection:
                    res = func(self,text)
                    with connection.cursor() as cursor:
                        cursor.execute(res)
                        connection.commit()
                    return res
            except Error as e:
                print(e)
        return wrapper

    @DB_deco_start_session
    def start_session(self):
        session_start = """
                    INSERT INTO session(StartTime)
                    VALUES (NOW())
            """
        return  session_start

    @DB_deco_start_session
    def end_session(self):
        session_end = f"""
                    UPDATE session SET EndTime=NOW()
                    WHERE idSession = {self.id}
            """
        return session_end

    @DB_message
    def send_message(self,texte):
        message = f"""
                    INSERT INTO message(MessageTime,idSession,Text,idClient)
                    VALUES (NOW(),'{self.id}','{texte}','{self.id}')
        """
        return message


class Watchdog():
    def __init__(self, timeout=10):
        self.timeout = timeout
        self._t = None
        self._id = None

    def do_expire(self):
        # raise SystemExit
        global DB
        DB.end_session()
        os.kill(os.getpid(),signal.SIGTERM)

    def _expire(self):
        self.do_expire()

    def start(self):
        if self._t is None:
            self._t = threading.Timer(self.timeout, self._expire)
            self._t.start()

    def stop(self):
        if self._t is not None:
            self._t.cancel()
            self._t = None

    def refresh(self):
        if self._t is not None:
             self.stop()
             self.start()

def randomaizer():
    random.seed
    s = random.randint(0, 2)
    return s

def answer_generator(first_sms, second_sms="Nope"):
    answer = randomaizer()
    if first_sms == "Happiness" and second_sms=="Nope":
        if answer == 0:
            botwords = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —è —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –¥–æ–±—Ä–æ–º –∑–¥—Ä–∞–≤–∏–∏!üòÅ"
        elif answer == 1:
            botwords = "–î–æ–±—Ä–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫!üòÉ"
        elif answer == 2:
            botwords = "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã —Å–µ–≥–æ–¥–Ω—è –≤ –±–æ–¥—Ä–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –¥—É—Ö–∞!üòÑ"
    elif first_sms == "Sadness" and second_sms=="Nope":
        if answer == 0:
            botwords = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –≥—Ä—É—Å—Ç–Ω—ã–π...üòØ"
        elif answer == 1:
            botwords = "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –Ω–µ–≤–∞–∂–Ω–æ, —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?üòØ"
        elif answer == 2:
            botwords = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤—ã –Ω–µ —Ä–∞–¥—ã –º–µ–Ω—è –≤–∏–¥–µ—Ç—å?üòØ"
    elif first_sms == "Irritation" and second_sms=="Nope":
        if answer == 0:
            botwords = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤—ã –Ω–µ —Ä–∞–¥—ã –º–µ–Ω—è –≤–∏–¥–µ—Ç—å?üòØ"
        elif answer == 1:
            botwords = "–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –º–æ–π –∫–æ–∂–∞–Ω–Ω—ã–π –¥—Ä—É–≥, —Ç—ã –∑–ª–∏—à—å—Å—è?üòØ"
        elif answer == 2:
            botwords = "–ó-–∑-–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π? –Ø —Å–º–æ—Ç—Ä—é , —Ç—ã –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏... –ù–∞–¥–µ—é—Å—å, —Ç—ã –Ω–µ –∑–∞—Ö–æ—á–µ—à—å –º–µ–Ω—è —É–¥–∞—Ä–∏—Ç—å...üòØ"
    elif first_sms == "Happiness" and second_sms=="Happiness":
        if answer == 0:
            botwords = "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, —á—Ç–æ —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–µ!"
        elif answer == 1:
            botwords = "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–≤–æ—è —É–ª—ã–±–∫–∞"
        elif answer == 2:
            botwords = "–õ—é–¥–∏, –Ω–∞ –ª–∏—Ü–∞—Ö –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–æ–∏—Ç —É–ª—ã–±–∫–∞, –ø–æ–¥–Ω–∏–º–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–µ —Ç–æ–ª—å–∫–æ –º–Ω–µ, –Ω–æ –∏ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º.)"
    elif first_sms == "Sadness" and second_sms=="Happiness":
        if answer == 0:
            botwords = "–Ø —Ä–∞–¥, —á—Ç–æ —Ç–µ–±–µ —Å—Ç–∞–ª–æ –ª—É—á—à–µ, –º–æ–π –¥—Ä—É–≥!"
        elif answer == 1:
            botwords = "–í—Å–µ —Å—Ç–∞–ª–æ –Ω–∞ —Å–≤–æ–∏ –º–µ—Å—Ç–∞, —Ç—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥—É–µ—à—å—Å—è, —è —Å–Ω–æ–≤–∞ –ª—é–±—É—é—Å—å —Ç–≤–æ–µ–π —É–ª—ã–±–∫–æ–π)"
        elif answer == 2:
            botwords = "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, –¥—Ä—É–≥ –º–æ–π, —É–ª—ã–±–∫–∞ –∏ —Å–º–µ—Ö –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –∂–∏–∑–Ω—å!"
    elif first_sms == "Irritation" and second_sms=="Happiness":
        if answer == 0:
            botwords = "–Ø —Ç–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ—Å—Ç–∞–ª –∑–ª–∏—Ç—å—Å—è, –¥—Ä—É–≥ –º–æ–π)"
        elif answer == 1:
            botwords = "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"
        elif answer == 2:
            botwords = "–°–ø–∞—Å–∏–±–æ, –∑–∞ —Ç–≤–æ—é —É–ª—ã–±–∫—É:3"
    elif first_sms == "Happiness" and second_sms=="Sadness":
        if answer == 0:
            botwords = "–ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, —è —Ç–µ–±—è –æ–±–∏–¥–µ–ª?üò•"
        elif answer == 1:
            botwords = "–ù–∞ —Ç–≤–æ–µ–º –ª–∏—Ü–µ –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–æ—è–≤–∏–ª–∞—Å—å –∫—Ä–∞—Å–∫–∞ –≥—Ä—É—Å—Ç–∏, —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å —á–µ–º-–Ω–∏–±—É–¥—å?"
        elif answer == 2:
            botwords = "–ò–¥–∏ —Å—é–¥–∞, –º–æ–π –¥—Ä—É–≥. *–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—ä—è—Ç–∏—è*"
    elif first_sms == "Sadness" and second_sms=="Sadness":
        if answer == 0:
            botwords = "–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ —Ç–µ–±—è —Ä–∞–∑–≤–µ—Å–µ–ª–∏—Ç—å... –ù–æ —è —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞—é!"
        elif answer == 1:
            botwords = "*–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—ä—è—Ç–∏—è*"
        elif answer == 2:
            botwords = "–í–Ω–∏–º–∞–Ω–∏–µ! –ê–Ω–Ω–µ–∫–¥–æ—Ç..."
    elif first_sms == "Irritation" and second_sms=="Sadness":
        if answer == 0:
            botwords = "–í–∏–∂—É, —Å—Ç–∞–ª–æ –Ω–µ–º–Ω–æ–≥–æ –ª—É—á—à–µ, –Ω–æ —è —Ç–µ–±—è –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ –æ—Å—Ç–∞–≤–ª—é..."
        elif answer == 1:
            botwords = "–ê –¥–∞–≤–∞–π, —è –Ω–∞–º –µ—â–µ –∏ –º–æ—Ä–æ–∂–µ–Ω–Ω–æ–≥–æ –∫—É–ø–ª—é?)"
        elif answer == 2:
            botwords = "–¢—ã –Ω–∞ –ø—É—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Å—Ç–æ—Ä–æ–Ω—É —Å—á–∞—Å—Ç—å—è, –ø–æ–¥–∞–≤–∞–Ω –º–æ–π —é–Ω—ã–π...‚òØ"
    elif first_sms == "Happiness" and second_sms=="Irritation":
        if answer == 0:
            botwords = "–°–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —è —Å–¥–µ–ª–∞–ª –Ω–µ —Ç–∞–∫? –¢–æ–ª—å–∫–æ –Ω–µ –∑–ª–∏—Å—å, –ø—Ä–æ—à—É..."
        elif answer == 1:
            botwords = "–ú–Ω–µ –æ—á–µ–Ω—å —Å—Ç—Ä–∞—à–Ω–æ, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∑–ª–∏—Ç—Å—è –Ω–∞ –º–µ–Ω—è..."
        elif answer == 2:
            botwords = "–ë—É–¥—å —Å–ø–æ–∫–æ–µ–π, –Ω–µ–Ω–∞–≤–∏—Å—Ç—å –∏ –∑–ª–æ—Å—Ç—å –ø—É—Ç–µ–º —è–≤–ª—è—é—Ç—Å—è –∫ –∑–ª–æ—Å—Ç–∏ –∏ –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏ –±–æ–ª—å—à–µ–π...‚òØ"
    elif first_sms == "Sadness" and second_sms=="Irritation":
        if answer == 0:
            botwords = "–õ–∞–¥–Ω–æ... —è –ø–æ–Ω—è–ª... –û–±–Ω–∏–º–∞—à–∫–∏ –±—ã–ª–∏ –ª–∏—à–Ω–∏–º–∏ üò¢"
        elif answer == 1:
            botwords = "–£ –Ω–∞—Å –µ—Å—Ç—å –ü–ï–ß–ï–ù–¨–ö–ò!!! –•–æ—á–µ—à—å –ø–∞—Ä–æ—á–∫—É?..."
        elif answer == 2:
            botwords = "–ë—Ä–∞—Ç–∏—à–∫–∞–∞–∞, —è —Ç–µ–±–µ –ø–æ–∫—É—à–∞—Ç—å –ø—Ä–∏–Ω–µ—Å...üêò"
    elif first_sms == "Irritation" and second_sms=="Irritation":
        if answer == 0:
            botwords = "–ë—Ä–∞—Ç–∏—à–∫–∞, –Ω—É –Ω–µ —Å—Ç—É–∫–∞–∞–∞–∞–π...üêò"
        elif answer == 1:
            botwords = "...*–ü—ã—Ç–∞–µ—Ç—Å—è —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è*"
        elif answer == 2:
            botwords = "–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã–ª –±–æ—Ä–æ—Ç—å—Å—è —Å–æ –∑–ª–æ–º, –∞ –Ω–µ –ø—Ä–∏–º–∫–Ω—É—Ç—å –∫ –Ω–µ–º—É!‚≠ê"
    return botwords


def get_key(d, value):
    for k, v in d.items():
        for val in v:
            if val == value:
                return True

def get_keyano(d, value):
    for k, v in d.items():
        for val in v:
            if val == value:
                return k


emojiDict = {'Happiness':['üòÄ','üòÅ','üòÇ','üòÉ','üòÑ','üòÜ','üòä','ü§©','ü•≥'],
             'Sadness':['üôÑ','üò•','üò£','üò´','üòï','üòî','üòì','‚òπ','üôÅ','üòü'],
             'Irritation':['üò¨','üë∫','üíÄ','üëø','üòà','ü§¨','üò°','üò†','üò§']}
DB = DBwork()

def start():
    global DB
    try:
        lister = []
        s = ""
        atr = True
        global  emojiDict
        # with open("emojis.txt") as file:
        #     for line in file:
        #         key, *value = line.split()
        #         emojiDict[key] = value
        wd = Watchdog(60)
        for key, value in emojiDict.items():
            if key == "Happiness":
                s = "—Å—á–∞—Å—Ç—å—è"
            elif key == "Sadness":
                s = "–≥—Ä—É—Å—Ç–∏"
            elif key == "Irritation":
                s = "–∑–ª–æ—Å—Ç–∏"
            print(f"–î–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è {s} –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ : {value}")
        DB.start_session()
        wd.start()
        while atr==True:
            answ = input("–ö–ª–∏–µ–Ω—Ç:")
            DB.send_message(f"–ö–ª–∏–µ–Ω—Ç: {answ}")
            wd.refresh()
            if get_key(emojiDict, answ):
                if len(lister) == 0:
                    lister.append(get_keyano(emojiDict,answ))
                    bot_answer = answer_generator(lister[0])
                    print(f"–ë–æ—Ç: {bot_answer}")
                    DB.send_message(f"–ë–æ—Ç: {bot_answer}")
                elif len(lister) == 1:
                    lister.append(get_keyano(emojiDict,answ))
                    bot_answer = answer_generator(lister[0],lister[1])
                    print(f"–ë–æ—Ç: {bot_answer}")
                    DB.send_message(f"–ë–æ—Ç: {bot_answer}")
                elif len(lister) == 2:
                    lister.remove(lister[0])
                    lister.append(get_keyano(emojiDict,answ))
                    bot_answer = answer_generator(lister[0], lister[1])
                    print(f"–ë–æ—Ç: {bot_answer}")
                    DB.send_message(f"–ë–æ—Ç: {bot_answer}")
            else:
                print("–ë–æ—Ç: –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª")
                DB.send_message("–ë–æ—Ç: –Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª")
                DB.end_session()
                break
    except SystemExit:
        DB.end_session()


start()
